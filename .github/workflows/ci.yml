name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ opened, reopened, synchronize ]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
        rust: [ nightly ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Install musl target
        run:
          rustup target add x86_64-unknown-linux-musl
      - name: add rust src
        run:
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: Install bcc
        run: |
          # ubuntu forgot to set a soname symlink somehow
          sudo apt install libbpfcc musl-tools && sudo ln -s /usr/lib/x86_64-linux-gnu/libbcc.so.0 /usr/lib/x86_64-linux-gnu/libbcc.so
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}
  lint:
    name: Linting (fmt + clippy)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [ nightly ]
        target:
          - x86_64-unknown-linux-gnu
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          components: rustfmt, clippy
      - name: Install musl target
        run:
          rustup target add x86_64-unknown-linux-musl
      - name: add rust src
        run:
          rustup component add rust-src --toolchain nightly-x86_64-unknown-linux-gnu
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
  cargo-deny:
    name: Cargo Deny (crate metadata checks)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
